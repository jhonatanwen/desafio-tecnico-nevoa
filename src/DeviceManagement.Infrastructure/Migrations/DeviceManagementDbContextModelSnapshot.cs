// <auto-generated />
using System;
using DeviceManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeviceManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DeviceManagementDbContext))]
    partial class DeviceManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Dispositivo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtivacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imei")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Imei")
                        .IsUnique();

                    b.HasIndex("Serial")
                        .IsUnique();

                    b.ToTable("Dispositivos", (string)null);
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DispositivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataHora");

                    b.HasIndex("DispositivoId", "DataHora");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Dispositivo", b =>
                {
                    b.HasOne("DeviceManagement.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Dispositivos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Evento", b =>
                {
                    b.HasOne("DeviceManagement.Domain.Entities.Dispositivo", "Dispositivo")
                        .WithMany("Eventos")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("DeviceManagement.Domain.Entities.Dispositivo", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
